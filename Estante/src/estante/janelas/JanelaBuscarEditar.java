/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package estante.janelas;

import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel
 */
public class JanelaBuscarEditar extends javax.swing.JFrame {

    JanelaPrincipal janelaPrincipal;
    int indexAtual;
    /**
     * Creates new form janelaBuscar
     */
    public JanelaBuscarEditar() {
        initComponents();
    }
    public JanelaBuscarEditar(JanelaPrincipal janelaPrincipal)
    {
        this.janelaPrincipal = janelaPrincipal;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Selecione o tipo de busca");

        jCheckBox1.setText("Nome da Revista");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Nome da Editora");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Nome do(a) Autor(a)");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Nome do Artigo");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jCheckBox2))
                                .addGap(101, 101, 101)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox4)
                                    .addComponent(jCheckBox3))
                                .addGap(0, 47, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(93, 93, 93))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(75, 75, 75)
                                .addComponent(jButton1)
                                .addGap(100, 100, 100))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox1.isSelected())
        {
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox2.isSelected())
        {
            jCheckBox1.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox3.isSelected())
        {
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox4.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox4.isSelected())
        {
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nome;
        int aux = 0;
        int count = 0;
        int [] indexEncontrados;
        if(jCheckBox1.isSelected())
        {
            nome=null;
            nome = JOptionPane.showInputDialog("Informe o Nome da Revista");
            if(nome!=null){
            for(this.indexAtual = 0 ; this.indexAtual < this.janelaPrincipal.estante.getTotalDeRevistas() ; this.indexAtual++)
            {
                if(this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getNome() == null ? nome == null : this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getNome().contains(nome))
                {
                    aux++;
                }
            }
            indexEncontrados = new int[aux];
            for(this.indexAtual = 0 ; this.indexAtual < this.janelaPrincipal.estante.getTotalDeRevistas() ; this.indexAtual++)
            {
                if(this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getNome() == null ? nome == null : this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getNome().contains(nome))
                {
                    indexEncontrados[count] = this.indexAtual;
                    count++;
                }
            }
            if(aux!=0)
            {
                JanelaExibicaoEditar janelaExibicaoEditar = new JanelaExibicaoEditar(this.janelaPrincipal,indexEncontrados,aux);
                janelaExibicaoEditar.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(null, "Não encontrado");
            
        }
        }
        if(jCheckBox2.isSelected())
        {
            nome = null;
            nome = JOptionPane.showInputDialog("Informe o Nome da Editora");
            aux = 0;
            if(nome!=null){
            for(this.indexAtual = 0; this.indexAtual < this.janelaPrincipal.estante.getTotalDeRevistas();this.indexAtual++)
            {
                if(this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getEditora().getNome() == null ? nome == null : this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getEditora().getNome().contains(nome))
                {
                    aux++;
                }
            }
            indexEncontrados = new int[aux];
            count = 0;
            for(this.indexAtual = 0; this.indexAtual < this.janelaPrincipal.estante.getTotalDeRevistas() ; this.indexAtual++)
            {
                if(this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getEditora().getNome() == null ? nome == null : this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getEditora().getNome().contains(nome))
                {
                    indexEncontrados[count] = this.indexAtual;
                    count++;
                }
            }if(aux!=0)
            {
                JanelaExibicaoEditar janelaExibicaoEditar = new JanelaExibicaoEditar(this.janelaPrincipal,indexEncontrados,aux);
                janelaExibicaoEditar.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(null, "Não encontrado");
        }
        }
        if(jCheckBox3.isSelected())
        {
            nome = null;
            nome = JOptionPane.showInputDialog("Informe o Nome do(a) Autor(a)");
            aux = 0;
            if(nome!= null)
            {
                for(this.indexAtual = 0 ; this.indexAtual < this.janelaPrincipal.estante.getTotalDeRevistas() ; this.indexAtual++)
                {
                    for(int count2 = 0 ; count2 < this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().size();count2++)
                    {
                        for(int count3 = 0 ; count3 < this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getAutores().size();count3++)
                        {
                            if(this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getAutores().get(count3).getNome() == null ? nome == null : this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getAutores().get(count3).getNome().contains(nome))
                            {
                                aux++;
                            }
                        }
                    }
                }
                indexEncontrados = new int[aux];
                count = 0;
                for(this.indexAtual = 0 ; this.indexAtual < this.janelaPrincipal.estante.getTotalDeRevistas() ; this.indexAtual++)
                {
                    for(int count2 = 0 ; count2 < this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().size();count2++)
                    {
                        for(int count3 = 0 ; count3 < this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getAutores().size();count3++)
                        {
                            if(this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getAutores().get(count3).getNome() == null ? nome == null : this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getAutores().get(count3).getNome().contains(nome))
                            {
                                indexEncontrados[count]=this.indexAtual;
                                count++;
                            }
                        }
                    }
                }
            if(aux!=0)
            {
                JanelaExibicaoEditar janelaExibicaoEditar = new JanelaExibicaoEditar(this.janelaPrincipal,indexEncontrados,aux);
                janelaExibicaoEditar.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(null, "Não encontrado");
            }
        }
        if(jCheckBox4.isSelected())
        {
            nome=null;
            nome = JOptionPane.showInputDialog("Informe o Nome do Artigo");
            aux = 0;
            if(nome!=null){
            for(this.indexAtual = 0; this.indexAtual < this.janelaPrincipal.estante.getTotalDeRevistas();this.indexAtual++)
            {
                for(int count2 = 0 ; count2 < this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().size();count2++)
                {
                    if(this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getTitulo() == null ? nome == null : this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getTitulo().contains(nome))
                    {
                        aux++;
                    }
                }
            }
            indexEncontrados = new int[aux];
            count = 0;
            for(this.indexAtual = 0; this.indexAtual < this.janelaPrincipal.estante.getTotalDeRevistas();this.indexAtual++)
            {
                for(int count2 = 0 ; count2 < this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().size();count2++)
                {
                    if(this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getTitulo() == null ? nome == null : this.janelaPrincipal.estante.getRevitas().get(this.indexAtual).getArtigos().get(count2).getTitulo().contains(nome))
                    {
                        indexEncontrados[count]=this.indexAtual;
                        count++;
                    }
                }
            }
            if(aux!=0)
            {
                JanelaExibicaoEditar janelaExibicaoEditar = new JanelaExibicaoEditar(this.janelaPrincipal,indexEncontrados,aux);
                janelaExibicaoEditar.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(null, "Não encontrado");
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaBuscarEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaBuscarEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaBuscarEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaBuscarEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaBuscarEditar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
